{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\dtask\\\\src\\\\Code.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = props => {\n  _s();\n\n  const [content, setContent] = useState(props.content);\n\n  const handleKeyDown = evt => {\n    let value = content,\n        selStartPos = evt.currentTarget.selectionStart;\n    console.log(evt.currentTarget);\n\n    if (evt.key === \"Tab\") {\n      value = value.substring(0, selStartPos) + \"    \" + value.substring(selStartPos, value.length);\n      evt.currentTarget.selectionStart = selStartPos + 3;\n      evt.currentTarget.selectionEnd = selStartPos + 4;\n      evt.preventDefault();\n      setContent(value);\n    }\n  };\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [props.language, content]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-edit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"in\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"code-input box\",\n              value: content,\n              onChange: evt => setContent(evt.target.value),\n              onKeyDown: handleKeyDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"button is-success\",\n          children: \"Live View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-edit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"out\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"code-output\",\n              children: [\"Output:\", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: `language-${props.language} my-6 mx-4`,\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CodeEditor, \"EP9+P9jWrkWD3MCQURCiZjgsMjY=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/Acer/dtask/src/Code.js"],"names":["React","useState","useEffect","Prism","CodeEditor","props","content","setContent","handleKeyDown","evt","value","selStartPos","currentTarget","selectionStart","console","log","key","substring","length","selectionEnd","preventDefault","highlightAll","language","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,KAAK,CAACC,OAAP,CAAtC;;AAEA,QAAME,aAAa,GAAGC,GAAG,IAAI;AAC3B,QAAIC,KAAK,GAAGJ,OAAZ;AAAA,QACEK,WAAW,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,cADlC;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,aAAhB;;AAEA,QAAIH,GAAG,CAACO,GAAJ,KAAY,KAAhB,EAAuB;AACrBN,MAAAA,KAAK,GACHA,KAAK,CAACO,SAAN,CAAgB,CAAhB,EAAmBN,WAAnB,IACA,MADA,GAEAD,KAAK,CAACO,SAAN,CAAgBN,WAAhB,EAA6BD,KAAK,CAACQ,MAAnC,CAHF;AAIAT,MAAAA,GAAG,CAACG,aAAJ,CAAkBC,cAAlB,GAAmCF,WAAW,GAAG,CAAjD;AACAF,MAAAA,GAAG,CAACG,aAAJ,CAAkBO,YAAlB,GAAiCR,WAAW,GAAG,CAA/C;AACAF,MAAAA,GAAG,CAACW,cAAJ;AAEAb,MAAAA,UAAU,CAACG,KAAD,CAAV;AACD;AACF,GAjBD;;AAmBAR,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACkB,YAAN;AACD,GAFQ,EAEN,CAAChB,KAAK,CAACiB,QAAP,EAAiBhB,OAAjB,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCACE;AAAK,YAAA,KAAK,EAAC,IAAX;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,KAAK,EAAEA,OAFT;AAGE,cAAA,QAAQ,EAAEG,GAAG,IAAIF,UAAU,CAACE,GAAG,CAACc,MAAJ,CAAWb,KAAZ,CAH7B;AAIE,cAAA,SAAS,EAAEF;AAJb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCACE;AAAK,YAAA,KAAK,EAAC,KAAX;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,iDAEE;AAAM,gBAAA,SAAS,EAAG,YAAWH,KAAK,CAACiB,QAAS,YAA5C;AAAA,0BAA0DhB;AAA1D;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AA8BD,CAxDD;;GAAMF,U;;KAAAA,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\n\r\nconst CodeEditor = props => {\r\n  const [content, setContent] = useState(props.content);\r\n\r\n  const handleKeyDown = evt => {\r\n    let value = content,\r\n      selStartPos = evt.currentTarget.selectionStart;\r\n\r\n    console.log(evt.currentTarget);\r\n\r\n    if (evt.key === \"Tab\") {\r\n      value =\r\n        value.substring(0, selStartPos) +\r\n        \"    \" +\r\n        value.substring(selStartPos, value.length);\r\n      evt.currentTarget.selectionStart = selStartPos + 3;\r\n      evt.currentTarget.selectionEnd = selStartPos + 4;\r\n      evt.preventDefault();\r\n\r\n      setContent(value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, [props.language, content]);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"columns\">\r\n        <div class=\"column is-6\">\r\n          <div className=\"code-edit-container\">\r\n            <div class=\"in\">\r\n              <textarea\r\n                className=\"code-input box\"\r\n                value={content}\r\n                onChange={evt => setContent(evt.target.value)}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"button is-success\">Live View</div>\r\n        </div>\r\n        <div class=\"column is-6\">\r\n          <div className=\"code-edit-container\">\r\n            <div class=\"out\">\r\n              <pre className=\"code-output\">\r\n                Output:\r\n                <code className={`language-${props.language} my-6 mx-4`}>{content}</code>\r\n              </pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;"]},"metadata":{},"sourceType":"module"}