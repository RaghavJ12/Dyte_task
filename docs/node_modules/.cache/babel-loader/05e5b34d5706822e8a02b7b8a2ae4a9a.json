{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\dtask\\\\src\\\\SplitPane.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useContext, useEffect, useRef, useState } from \"react\";\nimport QuoteContext from \"./QuoteContext\";\nimport SplitPaneContext from \"./SplitPaneContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SplitPane = ({\n  children,\n  ...props\n}) => {\n  _s();\n\n  const [clientHeight, setClientHeight] = useState(null);\n  const [clientWidth, setClientWidth] = useState(null);\n  const yDividerPos = useRef(null);\n  const xDividerPos = useRef(null);\n\n  const onMouseHoldDown = e => {\n    yDividerPos.current = e.clientY;\n    xDividerPos.current = e.clientX;\n  };\n\n  const onMouseHoldUp = () => {\n    yDividerPos.current = null;\n    xDividerPos.current = null;\n  };\n\n  const onMouseHoldMove = e => {\n    if (!yDividerPos.current && !xDividerPos.current) {\n      return;\n    }\n\n    setClientHeight(clientHeight + e.clientY - yDividerPos.current);\n    setClientWidth(clientWidth + e.clientX - xDividerPos.current);\n    yDividerPos.current = e.clientY;\n    xDividerPos.current = e.clientX;\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", onMouseHoldUp);\n    document.addEventListener(\"mousemove\", onMouseHoldMove);\n    return () => {\n      document.removeEventListener(\"mouseup\", onMouseHoldUp);\n      document.removeEventListener(\"mousemove\", onMouseHoldMove);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    children: /*#__PURE__*/_jsxDEV(SplitPaneContext.Provider, {\n      value: {\n        clientHeight,\n        setClientHeight,\n        clientWidth,\n        setClientWidth,\n        onMouseHoldDown\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SplitPane, \"Ll8+XHtDis/O1IfQasQr5xZ71g0=\");\n\n_c = SplitPane;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitPane\");","map":{"version":3,"sources":["C:/Users/Acer/dtask/src/SplitPane.js"],"names":["React","createRef","useContext","useEffect","useRef","useState","QuoteContext","SplitPaneContext","SplitPane","children","props","clientHeight","setClientHeight","clientWidth","setClientWidth","yDividerPos","xDividerPos","onMouseHoldDown","e","current","clientY","clientX","onMouseHoldUp","onMouseHoldMove","document","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,SADJ,EAEIC,UAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKIC,QALJ,QAMS,OANT;AAOE,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA4B;AAAA;;AAC5C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMU,WAAW,GAAGX,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMY,WAAW,GAAGZ,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMa,eAAe,GAAIC,CAAD,IAAO;AAC7BH,IAAAA,WAAW,CAACI,OAAZ,GAAsBD,CAAC,CAACE,OAAxB;AACAJ,IAAAA,WAAW,CAACG,OAAZ,GAAsBD,CAAC,CAACG,OAAxB;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1BP,IAAAA,WAAW,CAACI,OAAZ,GAAsB,IAAtB;AACAH,IAAAA,WAAW,CAACG,OAAZ,GAAsB,IAAtB;AACD,GAHD;;AAKA,QAAMI,eAAe,GAAIL,CAAD,IAAO;AAC7B,QAAI,CAACH,WAAW,CAACI,OAAb,IAAwB,CAACH,WAAW,CAACG,OAAzC,EAAkD;AAChD;AACD;;AAEDP,IAAAA,eAAe,CAACD,YAAY,GAAGO,CAAC,CAACE,OAAjB,GAA2BL,WAAW,CAACI,OAAxC,CAAf;AACAL,IAAAA,cAAc,CAACD,WAAW,GAAGK,CAAC,CAACG,OAAhB,GAA0BL,WAAW,CAACG,OAAvC,CAAd;AAEAJ,IAAAA,WAAW,CAACI,OAAZ,GAAsBD,CAAC,CAACE,OAAxB;AACAJ,IAAAA,WAAW,CAACG,OAAZ,GAAsBD,CAAC,CAACG,OAAxB;AACD,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,aAArC;AACAE,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCF,eAAvC;AAEA,WAAO,MAAM;AACXC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,aAAxC;AACAE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CH,eAA1C;AACD,KAHD;AAID,GARQ,CAAT;AAUA,sBACE,oBAASb,KAAT;AAAA,2BACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,YADK;AAELC,QAAAA,eAFK;AAGLC,QAAAA,WAHK;AAILC,QAAAA,cAJK;AAKLG,QAAAA;AALK,OADT;AAAA,gBASGR;AATH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArDD;;GAAMD,S;;KAAAA,S","sourcesContent":["import React, {\r\n    createRef,\r\n    useContext,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n  } from \"react\";\r\n  import QuoteContext from \"./QuoteContext\";\r\n  import SplitPaneContext from \"./SplitPaneContext\";\r\n  \r\n  const SplitPane = ({ children, ...props }) => {\r\n    const [clientHeight, setClientHeight] = useState(null);\r\n    const [clientWidth, setClientWidth] = useState(null);\r\n    const yDividerPos = useRef(null);\r\n    const xDividerPos = useRef(null);\r\n  \r\n    const onMouseHoldDown = (e) => {\r\n      yDividerPos.current = e.clientY;\r\n      xDividerPos.current = e.clientX;\r\n    };\r\n  \r\n    const onMouseHoldUp = () => {\r\n      yDividerPos.current = null;\r\n      xDividerPos.current = null;\r\n    };\r\n  \r\n    const onMouseHoldMove = (e) => {\r\n      if (!yDividerPos.current && !xDividerPos.current) {\r\n        return;\r\n      }\r\n  \r\n      setClientHeight(clientHeight + e.clientY - yDividerPos.current);\r\n      setClientWidth(clientWidth + e.clientX - xDividerPos.current);\r\n  \r\n      yDividerPos.current = e.clientY;\r\n      xDividerPos.current = e.clientX;\r\n    };\r\n  \r\n    useEffect(() => {\r\n      document.addEventListener(\"mouseup\", onMouseHoldUp);\r\n      document.addEventListener(\"mousemove\", onMouseHoldMove);\r\n  \r\n      return () => {\r\n        document.removeEventListener(\"mouseup\", onMouseHoldUp);\r\n        document.removeEventListener(\"mousemove\", onMouseHoldMove);\r\n      };\r\n    });\r\n  \r\n    return (\r\n      <div {...props}>\r\n        <SplitPaneContext.Provider\r\n          value={{\r\n            clientHeight,\r\n            setClientHeight,\r\n            clientWidth,\r\n            setClientWidth,\r\n            onMouseHoldDown,\r\n          }}\r\n        >\r\n          {children}\r\n        </SplitPaneContext.Provider>\r\n      </div>\r\n    );\r\n  };"]},"metadata":{},"sourceType":"module"}